# Simple workflow for deploying static content to GitHub Pages
name: Deploy content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      purgeCache:
        description: "A list of URLs to purge from the cache, separated by \"|\".\n\nTo clear the entire cache, use \"--all\"."
        default: ""

  schedule:
    - cron: "0 0 * * *"

  repository_dispatch:
    types: [trigger_deploy]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Get username and repository
        run: |
          echo "REPO_USERNAME=${GITHUB_REPOSITORY%%/*}" >> $GITHUB_ENV
          echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Set pages url
        run: |
          echo "PAGES_URL=https://$REPO_USERNAME.github.io/$REPO_NAME" >> $GITHUB_ENV

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Download cache
        continue-on-error: true
        run: |
          wget "$PAGES_URL/cache.tgz?`date +%s`" -O website/public/cache.tgz

      - name: Extract cache
        continue-on-error: true
        run: |
          tar -xzvf website/public/cache.tgz

      - name: Install npm modules
        run: |
          cd ../website
          npm install

      - name: Purge specified items from cache
        if: ${{ github.event.inputs.purgeCache != '' }}
        run: |
          cd scripts
          deno run -A ./purgecache.ts "${{ github.event.inputs.purgeCache }}"

      - name: Process the json (schedule)
        if: ${{ github.event_name == 'schedule' }}
        run: |
          cd scripts
          deno run -A ./combine.ts "--baseHref=$PAGES_URL" --recheckUrls 2>&1 | tee ../website/public/deploy-log.txt

      - name: Process the json (normal)
        if: ${{ github.event_name != 'schedule' }}
        run: |
          cd scripts
          deno run -A ./combine.ts "--baseHref=$PAGES_URL" 2>&1 | tee ../website/public/deploy-log.txt

      - name: "Archive cache"
        run: |
          tar -czvf website/public/cache.tgz website/public/covers website/public/sha1sums.json website/public/mods.json

      - name: Build website
        run: |
          cd website
          npx astro build --base "/$REPO_NAME"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "./website/out"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
